version '1'

services:
  gatewayServer:
    build:
      context: .
      dockerfile: ./dockerfile.gatewayServer
    image: gatewayServer
    container_name: gatewayServerContainer
  # elastic_search:
  #   dockerfile: ./dockers/elsearch/Dockerfile
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   container_name: esdocker

# version: '2'
# services:
#   server:
#     build:
#       context: .
#       dockerfile: docker.server
#     image: express-server
#     container_name: express-server
#     ports:
#       - "3000:3000"
#     volumes:
#       - wwwroot:/wwwroot
#     links:
#       - database
#   webpack:
#     build:
#       context: .
#       dockerfile: docker.webpack
#     image: my-webpack
#     container_name: my-webpack-container
#     # ports:
#       # - "35729:35729" // for live reload
#     volumes:
#       - .:/app
#       - /app/node_modules
#       - wwwroot:/wwwroot
#   database: # name of the third service
#     image: mongo # specify image to build container from
#     ports:
#       - "27017:27017" # specify port forewarding
# volumes:
#   wwwroot:
#     driver: local
  #    - ./server:/server-src # "HOST_DIR:CONTAINER_DIR"
  #   links:
  #    - redis
  #    - postgres
  #   environment:
  #    - NODE_ENV=docker
  #    - DISPLAY=:99 # xvfb => for selenium
  #   container_name: clientdocker
  #   # sleep 10 => make some time for loading the server
  #   # command: [
  #   #   bash, -c,
  #   #   "source ~/.nvm/nvm.sh \
  #   #   && cd /webpack-react-example \
  #   #   && gulp unit-server \
  #   #   && (node ./server \
  #   #   & Xvfb :99 -ac \
  #   #   & source ~/.nvm/nvm.sh \
  #   #   && cd /webpack-react-example \
  #   #   && sleep 10 \
  #   #   && npm run e2e)"
  #   # ]
  # gateway_server:
  #
  # # redis:
  # #   image: redis
  # #   ports:
  # #    - "6379:6379"
  # #   container_name: wre-redis
  #
  # elastic_search:
  #   dockerfile: ./dockers/elsearch/Dockerfile
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   container_name: esdocker
  #
  # postgres:
  #   image: mdillon/postgis
  #   volumes:
  #     - ./db/pgdata:/pgdata
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=blend_admin
  #     - POSTGRES_PASSWORD=jmonlee
  #     - POSTGRES_DB=envoyus_db
  #   container_name: pgdocker
